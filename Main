/*
Los pines S0,S1,S2 y S3 del sensor TCS3200 se usan de la siguiente manera
------------------
S0    S1    Ajuste de frecuencia de salida
L     L     Apagado
L     H     2%
H     L     20%    
H     H     100%

Para este caso se uso 20%, de este modo nos aseguramos que la frecuencia de nyquist para el sampleo
se cumpla y no tener lecturas erroneas

s2    S3   Fotodiodo seleccionado
L     L     Rojo
L     H     Azul
H     L     Claro (sin filtro)
H     H     Verde
*/


//Bibliotecas usadas//
#include "msp430.h"
#include "driverlib.h"
#include <Servo.h>
#include "LCD_Launchpad.h"

// Declaracion de pines
char OEPin = 2;
char LED_sensor = 3;
char S0 = 4;
char S1 = 5;
char S2 = 6;
char S3 = 7;
char outPin = 8;
char maximo =13;
char rst = 14;
char obstac = 18;

//declaracion e inicializacion de cantidad de objetos maximos que soporta un contenedor
unsigned char max_cajas = 3;

//flags de nueva caja y contadores
bool flag_rojo=0;
bool flag_azul=0;
bool flag_verde=0;
char rojas=0;
char verdes=0;
char azules=0;
bool flag_nuevo = 0;

long int last=0;

//servos
Servo servo_1;
Servo servo_2;

//display
LCD_LAUNCHPAD myLCD;                    //Declaracion display

//Responsividad relativa de los fotodiodos
const char Rc = 100;           
const char Rr = 99;          
const char Rg = 65;     
const char Rb = 70;                    


void setup()
{
  Serial.begin(9600);

  pinMode(outPin, INPUT);               
  pinMode(OEPin, OUTPUT);
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);            
  pinMode(S3, OUTPUT);            
  pinMode(LED_sensor, OUTPUT);
  pinMode(obstac,INPUT);
  pinMode(rst,INPUT);
  pinMode(maximo,INPUT);

  digitalWrite(OEPin, LOW);              // Habilitacion del sensor TCS3200

  //arranca apagado hasta que detecte una caja
  digitalWrite(S0, LOW);                // Set del ajuste de frecuencia del sensor
  digitalWrite(S1, LOW);                 

   servo_1.attach(12);  //Inicilaizacion servo motor derivador
   servo_2.attach(11);  //Inicializacion servo motor barrera
   myLCD.init();        //Inicializacion display
   servo_1.write(100);
   servo_2.write(165);
}

void loop()
{ 
if (digitalRead(maximo)==HIGH){                             //Vuelve a poner en marcha el sistema cuando un contenedor esta lleno
        cajas();//
  }
  
if((digitalRead(obstac)==LOW) && ((millis()-last)>1000)){   //Deteccion de un nuevo obstaculo
      last=millis();
      digitalWrite(S0, HIGH);                                    //Encendido y ajuste de la frecuencia del sensor TCS3200 al 20%
      digitalWrite(S1, LOW);                  
      lectura();                                                 //Deteccion de color
      digitalWrite(S0, LOW);                                     //Apagado del sensor TCS3200 para evitar lecturas parasitas
      digitalWrite(S1, LOW);                
      servos();                                                  //Movimiento de servo motores de derivador y barrera
      alarma();                                                  //Chequeo de cantidad de paquetes en el contenedor
      delay (100);
}

}

void lectura(){
  digitalWrite(LED_sensor, HIGH);         //Enciende leds del sensor TCSC3200
  digitalWrite(S2, HIGH);                //Setea fotodiodos sin filtro
  digitalWrite(S3, LOW);
  int cPulse = pulseIn(outPin, LOW);     // Lectura color blanco
  int Ac = cPulse * Rc;                  // Ajuste de la lectura con la responsividad seteada previamente
  
  digitalWrite(S2, LOW);                 //Setea fotodiodos rojos
  digitalWrite(S3, LOW);
  int rPulse = pulseIn(outPin, LOW);     // Lectura color rojo
  int Ar = rPulse * Rr;                  // Ajuste de la lectura con la responsividad seteada previamente
  int Cr = Ar - Ac;                      // Correccion usando el valor obtenido de color blanco
  
  digitalWrite(S2, HIGH);                //Setea fotodiodos verdes
  digitalWrite(S3, HIGH);
  int gPulse = pulseIn(outPin, LOW);     // Lectura color rojo
  int Ag = gPulse * Rg;                               
  int Cg = Ag - Ac;                      
    
  digitalWrite(S2, LOW);                 //Setea fotodiodos verdes
  digitalWrite(S3, HIGH);
  int bPulse = pulseIn(outPin, LOW);     // Lectura color rojo
  int Ab = bPulse * Rb;                 
  int Cb = Ab - Ac;                      

digitalWrite(LED_sensor, LOW);

/************Determina la predominancia de los colores y los escala de 0 a 255*/


//En los primero dos casos el rojo es predominante por lo que se cuenta como paquete rojo
  if (Cr < Cg && Cg < Cb)                //   Rojo>Verde>Azul
  {
          myLCD.clear();
          myLCD.displayText("ROJO");flag_rojo=1;
          rojas++;
          myLCD.showChar(rojas,5);
  }
  else if (Cr < Cb && Cb < Cg)           //   Rojo>Azul>Verde
  {
          myLCD.clear();
          myLCD.displayText("ROJO");
          flag_rojo=1;
          rojas++;
          myLCD.showChar(rojas,5);
  }

 //En los primero dos casos el verde es predominante por lo que se cuenta como paquete verde
  else if (Cg < Cr && Cr < Cb)           //  Verde>Rojo>Azul
  {

          myLCD.clear();
          myLCD.displayText("VERDE");
          flag_verde=1;
          verdes++;
          myLCD.showChar(verdes,5);
  }
  else if (Cg < Cb && Cb < Cr)           //   Verde>Azul>Rojo
  {

          myLCD.clear();
          myLCD.displayText("VERDE");
          flag_verde=1;
          verdes++;
          myLCD.showChar(verdes,5);
  }  
//En los primero dos casos el azul es predominante por lo que se cuenta como paquete azul
  else if (Cb < Cr && Cr < Cg)           //  Azul>Rojo>Verde
  {
          myLCD.clear();
          myLCD.displayText("AZUL");
          flag_azul=1;
          azules++;
          myLCD.showChar(azules,5);
  }  
  else // (Cb < Cg && Cg < Cr)           // Azul>Verde>Rojo
  {
          myLCD.clear();
          myLCD.displayText("AZUL");
          flag_azul=1;
          azules++;
          myLCD.showChar(azules,5);
  }  
}//Fin funcion lectura

void servos (void){
//Segun el color se barre un angulo con los servomotores del derivador y luego se levanta la barrera, pasados 300ms se baja la barrera 
if (flag_azul==1){
        flag_azul=0;
        servo_1.write(135);  
        delay(100);  
        servo_2.write(40);
        delay(300);
        servo_2.write(150);
}
else if (flag_rojo==1){
        flag_rojo=0;
        servo_1.write(65);
        delay(100);
        servo_2.write(40);
        delay(300);
        servo_2.write(150);
} 
else if (flag_verde==1){
        flag_verde=0;
        servo_1.write(100);
        delay(100);
        servo_2.write(40);
        delay(300);
        servo_2.write(150);
}
}//fin funcion servos

void alarma (void){
//Detecta si algun contenedor esta lleno y detiene el proceso hasta que se reemplace el contenedor mostrando en el display que contenedor reemplazar.
//despues de reeemplazar el contenedor se presiona un boton que permite que el proceso continue
while(rojas==max_cajas){   
        myLCD.clear();
        myLCD.displayText("VACIAR");
        delay(1000);    
        myLCD.clear();
        myLCD.displayText("ROJO");
        delay(1000);
        if(digitalRead(rst)==HIGH){
              myLCD.clear();
              rojas=0;
          }
}
while(azules==max_cajas){   
        myLCD.clear();
        myLCD.displayText("VACIAR");
        delay(1000);    
        myLCD.clear();
        myLCD.displayText("AZUL");
        delay(1000);
        if(digitalRead(rst)==HIGH){
              myLCD.clear();
              azules=0;
          }
}

while(verdes==max_cajas){   
        myLCD.clear();
        myLCD.displayText("VACIAR");
        delay(1000);    
        myLCD.clear();
        myLCD.displayText("VERDE");
        delay(1000);
        if(digitalRead(rst)==HIGH){
              myLCD.clear();
              verdes=0;
          }
}
}//Fin funcion alarmas

void cajas (void){                  //permite cambiar la capacidad maxima del contenedor, esto solo funciona si todos los contenedores en uso estan vacios
bool ok=vacias();  
if(ok==1){
          max_cajas +=3;
          delay(300);
          if(max_cajas >9){
            max_cajas = 3;
            } 
          myLCD.displayText("MAX ");myLCD.showChar(max_cajas,4);
   }
else if (ok==0){
      myLCD.showSymbol(LCD_SEG_MARK, 1);}
 }//fin cajas

bool vacias (void){       //chequea que todos los contenedores esten vacios
  
  if(rojas!=0 || verdes!=0 || azules!=0){
  return 0;  
    }
  else{return 1;}
 }
